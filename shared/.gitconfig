# Shared gitconfig

# Useful resources
# Git docs       - https://git-scm.com/docs/git-config
# henrebotha     - https://github.com/henrebotha/dotfiles/blob/main/git/dot-gitconfig
# mwhite         - https://gist.github.com/mwhite/6887990
# jvns           - https://jvns.ca/blog/2024/02/16/popular-git-config-options/
# 0livare        - https://gist.github.com/0livare/4960a81addfbcdc48abfe855fae0af43
# hansschnedlitz - https://www.hansschnedlitz.com/git-aliases/

[core]
    ignoreCase = false
    # https://github.blog/2022-06-29-improve-git-monorepo-performance-with-a-file-system-monitor/
    fsmonitor = true
    untrackedCache = true
    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-coresafecrlf
    eol = lf
    # safecrlf = true
    # autocrlf = input
    # excludesFile = ~/.gitignore  # global gitignore
    # attributesFile = ~/.gitattributes  # global gitattributes
    editor = vim
    # https://blog.thomasheartman.com/posts/change-your-git-comment-character
    # commentChar = ";"

[branch]
    sort = -committerdate

[commit]
    verbose = true

[diff]
    # https://luppeng.wordpress.com/2020/10/10/when-to-use-each-of-the-git-diff-algorithms/
    algorithm = histogram

[init]
    defaultBranch = main

[merge]
    conflictStyle = diff3  # https://ductile.systems/zdiff3/ - zdiff3 brakes things for some reason

[pull]
    # ff = only
    rebase = true

[push]
    # autoSetupRemote = true

[rebase]
    # autoStash = true

[rerere]
    # https://stackoverflow.com/questions/49500943/what-is-git-rerere-and-how-does-it-work
    enabled = true

[tag]
    sort = -taggerdate

# Include separate gitconfigs
[includeIf "gitdir:~/pr/"]
    path = ~/pr/pr.gitconfig

[includeIf "gitdir:~/wk/"]
    path = ~/wk/wk.gitconfig

[alias]
    # Get all git aliases
    # alias = config --get-regexp '^alias.'
    al = "!f() { [ $# -eq 0 ] && git config --get-regexp '^alias.' || git config --get-regexp '^alias.' | grep --color=always -E "$(echo "$@" | sed 's/ /|/g')"; }; f"

    # Configuration
    conli = config --list
    unm   = config user.name
    uem   = config user.email

    # Initialization & Adding
    i      = init
    cl     = clone
    ic     = !git init && git commit --allow-empty -m 'Initial commit'
    a      = !git add ${@} && git status --short
    aa     = !git add --all && git status --short
    aac    = !git add --all && git status --short && git commit -m
    autocp = !git add --all && git status --short && git commit -m 'Update' && git push

    # Committing
    c   = commit
    cm  = commit -m
    ca  = commit --amend
    cam = commit --amend -m

    # Diff and Reset
    d   = diff
    ds  = diff --stat
    dc  = diff --cached
    dsc = diff --stat --cached
    dcs = diff --cached --stat
    rv  = revert
    rs  = reset
    rss = reset --soft

    # Push, Pull, and Status
    s   = status --short
    su  = status --short --untracked-files
    pl  = pull
    plr = pull --rebase
    pu  = push

    # Branching and Switching
    br  = branch
    sw  = switch
    ch  = checkout
    chb = checkout -b
    cho = checkout --ours
    cht = checkout --theirs

    # Merging and Rebasing
    mg = merge
    rb = rebase

    # Stashing
    stl = stash list
    sts = stash save
    sta = stash apply
    std = stash drop
    stc = stash clear

    # Remotes
    rmt   = remote
    rmta  = remote add
    rmtsu = remote set-url
    rmtrm = remote remove

    # Viewing Logs
    sh  = show
    l   = log --graph --oneline
    ll  = "!f() { [ $# -eq 0 ] && git log --graph --oneline || git log --graph --oneline -"$1"; }; f"
    ls  = "!f() { [ $# -eq 0 ] && git log --graph --oneline --stat || git log --graph --oneline --stat -"$1"; }; f"
    rl  = "!f() { [ $# -eq 0 ] && git reflog --date=iso --pretty=oneline || git reflog --date=iso --pretty=oneline -"$1"; }; f"
    rls = "!f() { [ $# -eq 0 ] && git reflog --date=iso --pretty=oneline --stat || git reflog --date=iso --pretty=oneline --stat -"$1"; }; f"

# Load Git configs with specific overrides
[include]
    path = ~/win.gitconfig
    path = ~/wsl.gitconfig
